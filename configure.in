#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT(include/yardsale.h)
AM_INIT_AUTOMAKE(yardsale, cvs)

dnl Most of this file is jacked straight from Mahogany, thanks!
dnl OSTYPE may be set by the user to override the default which is just uname
if test "x$OSTYPE" = "x"; then
        OSTYPE=`uname`
fi

case "$OSTYPE" in
    freebsd* | FreeBSD*)
	ISFREEBSD=1
        ;;
    darwin* | Darwin*)
	USE_MAC=1
	MAKE_USE_MAC="USE_MAC=yes"
	USE_MINGW=0
	MAKE_USE_MINGW=""
	USE_RESOURCES=0
	MAKE_USE_RESOURCES=""
	;;
    cygwin* | CYGWIN*)
	USE_MAC=0
	MAKE_USE_MAC=""
	USE_MINGW=0
	MAKE_USE_MINGW=""
	USE_RESOURCES=1
	MAKE_USE_RESOURCES="USE_RESOURCES=yes"
	;;
    mingw* | MINGW*)
	USE_MAC=0
	MAKE_USE_MAC=""
	USE_MINGW=1
	MAKE_USE_MINGW="USE_MINGW=yes"
	USE_RESOURCES=1
	MAKE_USE_RESOURCES="USE_RESOURCES=yes"
	;;
    *)
	USE_MAC=0
	MAKE_USE_MAC=""
	USE_MINGW=0
	MAKE_USE_MINGW=""
	USE_RESOURCES=0
	MAKE_USE_RESOURCES=""
	;;
esac
AC_SUBST(MAKE_USE_MAC)
AC_SUBST(MAKE_USE_MINGW)
AC_SUBST(MAKE_USE_RESOURCES)
AC_SUBST(OSTYPE)

# Checks for programs.
AC_PROG_RANLIB
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CXXCPP
AC_PROG_INSTALL

dnl --------------------------------------------------------------------------
dnl check for (wx)gtk libraries
dnl --------------------------------------------------------------------------

dnl check for wxWindows installationÂ¤
AM_PATH_WXCONFIG(2.4.1,wxOK=1)

if test "$wxOK" != 1; then
   AC_MSG_ERROR([
	   YardSale requires wxWindows to be installed on your system
	   but wx-config script couldn't be found.

	   Please check that wx-config is in PATH, the directory
	   where wxWindows libraries are installed (returned by
	   'wx-config --libs' command) is in LD_LIBRARY_PATH or
	   equivalent variable and wxWindows version is 2.5.1 or above.
   ])
fi




CPPFLAGS="$WX_CPPFLAGS"
CFLAGS="$WX_CFLAGS"
CXXFLAGS="$WX_CXXFLAGS"

dnl normal linking mode is fully dynamic
GUI_LIBS="-lsablot -lodbc -lexpat $WX_LIBS"

AC_ARG_WITH(optimize,
	[  --with-optimize         Build YardSale optimized.], [
	echo "Building optimized..."
	CXXFLAGS="$CXXFLAGS -O2"
	CFLAGS="$CFLAGS -O2"])

AC_ARG_WITH(static,
	[  --with-static           Build YardSale static.], [
	echo "Building YardSale statically..."
	GUI_LIBS="$WX_LIBS_STATIC"
	CXXFLAGS="$CXXFLAGS -DYS_STATIC_BUILD"])

dnl ------------- Check for other libs ----------------
AC_CHECK_LIB(expat,XML_ParserCreate,[
                echo "Expat..."],
                [AC_MSG_WARN([
	   YardSale requires expat to be installed on your system.
   ])])

AC_CHECK_LIB(sablot,SablotGetOptions,[
                echo "Sablotron..."],
                [AC_MSG_WARN([
	   YardSale requires Sablotron to be installed on your system.

   ])
	GUI_LIBS="-lsablot $GUI_LIBS"])
   
AC_CHECK_LIB(odbc,SQLConnect,[
                echo "ODBC..."],
                [AC_MSG_WARN([
	   YardSale requires ODBC to be installed on your system.
   ])])
 
dnl ---------------- Hack, need charts here to put libgdc.a first on line 
   AC_ARG_WITH(charts,
        [  --with-charts           Build in charts (requires libgd)], [
        echo "Building chart support..."
        AC_CHECK_LIB(gd,gdImageLine,[
                AC_CHECK_LIB(freetype, FT_Init_FreeType,[
                    CFLAGS="$CFLAGS -DHAVE_LIBFREETYPE"
                    CXXFLAGS="$CXXFLAGS -DHAVE_LIBFREETYPE"
                    GUI_LIBS="-lfreetype $GUI_LIBS"])        
                ])
                CXXFLAGS="$CXXFLAGS -DYS_CHART "
                GUI_LIBS="extra/gdc/libys_gdc.a -lgd $GUI_LIBS"])
        

dnl Mac-specific post-link step
if test "$USE_MAC" = 1; then
    AC_PATH_PROG(SETFILE, SetFile, true, [$PATH:/Developer/Tools])

    REZFLAGS=`$WX_CONFIG_WITH_ARGS --rezflags`
    AC_SUBST(REZFLAGS)
fi

if test "$ISFREEBSD" = 1; then
	echo "Setting FreeBSD paths..."
	CXXFLAGS="$CXXFLAGS -I/usr/local/include"
	CFLAGS="$CFLAGS -I/usr/local/include"
	GUI_LIBS="$GUI_LIBS -L/usr/local/lib"
fi

AC_ARG_WITH(debug,
	[  --with-debug             Build with Debug information.], [
	echo "Building debug information..."
	CXXFLAGS="$CXXFLAGS -g -DYS_DEBUG_BUILD -DYS_OS=\\\"$OSTYPE\\\""
    CFLAGS="$CFLAGS -g"])

AC_ARG_WITH(glabout,
	[  --with-glabout           Build gratuitous gl about.], [
	echo "Building GL about..."
	AC_CHECK_LIB(GL,InitGL,[ 
		CXXFLAGS="$CXXFLAGS -DYS_OGL_ABOUT "
		GL_LIBS=`$WX_CONFIG_WITH_ARGS --gl-libs`
		GUI_LIBS="$GUI_LIBS $GL_LIBS "])
])


AC_SUBST(GUI_LIBS)

AC_CONFIG_FILES([Makefile
                 include/Makefile
                 src/Makefile
                 src/extra/Makefile
                 src/extra/xrc/Makefile
		 src/extra/wxrc/Makefile
		 src/extra/gdc/Makefile
		 src/res/Makefile
		 src/tests/Makefile
		 ])
AC_OUTPUT
